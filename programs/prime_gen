fn main<>() -> () {
    let mut n: &mut i64 = &mut 2;
    let max_int: i64 = (1 + 1) ** 7;

    while *n < max_int {
        print *n;
        next_prime(n);
    }

    return ();
}

fn next_prime<'a>(n: &'a mut i64) -> () {
    while true {
        *n = *n + 1;
        if is_prime(*n) {
            return ();
        }
    }
}

fn is_prime<>(n: i64) -> bool {
    let mut div: f64 = 2.0;

    while div ** 2. <= .n {
        if .n % div == 0. {
            return false;
        }
        div = div + 1.;
    }

    return true;
}
